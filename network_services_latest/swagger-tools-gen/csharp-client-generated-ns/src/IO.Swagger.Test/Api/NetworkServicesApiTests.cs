/* 
 * IX-API
 *
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * OpenAPI spec version: 2.2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */
using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing NetworkServicesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class NetworkServicesApiTests
    {
        private NetworkServicesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new NetworkServicesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of NetworkServicesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' NetworkServicesApi
            //Assert.IsInstanceOfType(typeof(NetworkServicesApi), instance, "instance is a NetworkServicesApi");
        }

        /// <summary>
        /// Test NetworkServicesList
        /// </summary>
        [Test]
        public void NetworkServicesListTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //List<string> id = null;
            //string state = null;
            //string stateIsNot = null;
            //string managingAccount = null;
            //string consumingAccount = null;
            //string externalRef = null;
            //string type = null;
            //string pop = null;
            //string productOffering = null;
            //var response = instance.NetworkServicesList(id, state, stateIsNot, managingAccount, consumingAccount, externalRef, type, pop, productOffering);
            //Assert.IsInstanceOf<List<NetworkService>> (response, "response is List<NetworkService>");
        }
    }

}
