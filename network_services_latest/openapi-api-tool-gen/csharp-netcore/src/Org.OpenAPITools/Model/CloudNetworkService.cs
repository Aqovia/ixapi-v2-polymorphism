/* 
 * IX-API
 *
 *  This API allows to config/change/delete Internet Exchange services.  # Filters  When querying collections, the provided query parameters are validated. Unknown query parameters are ignored. Providing invalid filter values should yield a validation error. 
 *
 * The version of the OpenAPI document: 2.2.0
 * 
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */


using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Org.OpenAPITools.Client.OpenAPIDateConverter;

namespace Org.OpenAPITools.Model
{
    /// <summary>
    /// CloudNetworkService
    /// </summary>
    [DataContract]
    public partial class CloudNetworkService : CloudNetworkServicePartial,  IEquatable<CloudNetworkService>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="CloudNetworkService" /> class.
        /// </summary>
        [JsonConstructorAttribute]
        protected CloudNetworkService() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="CloudNetworkService" /> class.
        /// </summary>
        /// <param name="billingAccount">An account requires billing_information to be used as a &#x60;billing_account&#x60;. (required).</param>
        /// <param name="capacity">The capacity of the service in Mbps. When null, the maximum capacity will be used..</param>
        /// <param name="chargedUntil">Your obligation to pay for the service will end on this date. Typically &#x60;â‰¥ decommission_at&#x60;.  This field is only used when the state is &#x60;DECOMMISSION_REQUESTED&#x60; or &#x60;DECOMMISSIONED&#x60;..</param>
        /// <param name="cloudKey">cloudKey (required).</param>
        /// <param name="consumingAccount">The &#x60;id&#x60; of the account consuming a service.  Used to be &#x60;owning_customer&#x60;.  (required).</param>
        /// <param name="contractRef">A reference to a contract. If no specific contract is used, a default MAY be chosen by the implementer. .</param>
        /// <param name="decommissionAt">The service will be decommissioned on this date.  This field is only used when the state is &#x60;DECOMMISSION_REQUESTED&#x60; or &#x60;DECOMMISSIONED&#x60;..</param>
        /// <param name="diversity">Same value as the corresponding &#x60;ProductOffering&#x60;.  The service can be delivered over multiple handovers from the exchange to the &#x60;service_provider&#x60;.  The &#x60;diversity&#x60; denotes the number of handovers between the exchange and the service provider. A value of two signals a redundant service.  Only one network service configuration for each &#x60;handover&#x60; and &#x60;cloud_vlan&#x60; can be created. (required).</param>
        /// <param name="externalRef">Reference field, free to use for the API user..</param>
        /// <param name="id">id (required).</param>
        /// <param name="managingAccount">The &#x60;id&#x60; of the account responsible for managing the service via the API. A manager can read and update the state of entities.  (required).</param>
        /// <param name="productOffering">productOffering (required).</param>
        /// <param name="providerRef">For a cloud network service with the exchange first workflow, the &#x60;provider_ref&#x60; will be a reference to a resource of the cloud provider. (E.g. the UUID of a virtual circuit.)  The &#x60;provider_ref&#x60; is managed by the exchange and its meaning may vary between different cloud services.  (required).</param>
        /// <param name="purchaseOrder">Purchase Order ID which will be displayed on the invoice.  (default to &quot;&quot;).</param>
        /// <param name="state">state (required).</param>
        /// <param name="status">status.</param>
        /// <param name="type">type (required).</param>
        public CloudNetworkService(string billingAccount = default(string), int? capacity = default(int?), DateTime chargedUntil = default(DateTime), string cloudKey = default(string), string consumingAccount = default(string), string contractRef = default(string), DateTime decommissionAt = default(DateTime), int diversity = default(int), string externalRef = default(string), string id = default(string), string managingAccount = default(string), string productOffering = default(string), string providerRef = default(string), string purchaseOrder = "", StateEnum state = default(StateEnum), List<Status> status = default(List<Status>), string type = default(string)) : base(billingAccount, capacity, chargedUntil, cloudKey, consumingAccount, contractRef, decommissionAt, diversity, externalRef, id, managingAccount, nscRequiredContactRoles, productOffering, providerRef, purchaseOrder, state, status, type)
        {
        }
        
        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class CloudNetworkService {\n");
            sb.Append("  ").Append(base.ToString().Replace("\n", "\n  ")).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public override string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as CloudNetworkService);
        }

        /// <summary>
        /// Returns true if CloudNetworkService instances are equal
        /// </summary>
        /// <param name="input">Instance of CloudNetworkService to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(CloudNetworkService input)
        {
            if (input == null)
                return false;

            return base.Equals(input);
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = base.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            foreach(var x in BaseValidate(validationContext)) yield return x;
            yield break;
        }
    }

}
